<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>방명록</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
  </head>
  <body>
    <form name="form-visitor">
      <fieldset>
        <legend>방명록 등록</legend>
        <input type="text" name="username" placeholder="이름" />
        <br />
        <input type="text" name="comment" placeholder="내용" />
        <br />
        <button type="button" onclick="addVisitor()">등록</button>
      </fieldset>
    </form>
    <div>
      <table border="1" cellspacing="0">
        <thead>
          <tr>
            <th>ID</th>
            <th>작성자</th>
            <th>방명록</th>
            <th>수정</th>
            <th>삭제</th>
          </tr>
        </thead>
        <tbody>
          <% for(let i = 0; i< data.length; i++) { %>
          <tr>
            <td><%= data[i].id %></td>
            <td><%= data[i].username %></td>
            <td><%= data[i].comment %></td>
            <td><button type="button" onclick="updateVisitor(`<%= data[i].id %>`, this.parentElement.parentElement)">수정</button></td>
            <td><button type="button" onclick="deleteVisitor(`<%= data[i].id %>`,this.parentElement.parentElement)">삭제</button></td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <script>
      function addVisitor() {
        //서버에 보낼 데이터를 만들어야함.
        const form = document.forms["form-visitor"]
        const data = {
          username: form.username.value,
          comment: form.comment.value,
        }

        //axios를 이용해 데이터를 서버로 전송.
        axios({
          method: "POST",
          url: "/visitor",
          data: data
        }).then((res) => {
          //axios응답을 받으면 방명록 아래에 행 주루룩 추가되게. 새로고침안하고 바로 나오게.
          //테이블에 행 추가 (동적으로)

          const {
            id,
            username,
            comment
          } = res.data

          $("tbody").append(`<tr>
            <td>${id}</td>
            <td>${username}</td>
            <td>${comment}</td>
            <td><button type="button" onclick="updateVisitor(${id},this.parentElement.parentElement)">수정</button></td>
            <td><button type="button" onclick="deleteVisitor(${id},this.parentElement.parentElement)">삭제</button></td>
            </tr>`)


        })




      }

      function deleteVisitor(id, TrElement) {
        //삭제할 id가 필요
        //id를 이용해서 url을 완성하고 요청을 보내면 된다.
        axios({
          method: 'delete',
          url: `/visitor/${id}`
        }).then((res) => {
          console.log(res.data)
          //삭제할 td태그가 필요
          $(TrElement).remove();
        })
      }

      //1)수정 버튼 누르기
      //2)수정하려는 작성자, 방명록 내용을 찾고
      //3)기존 input태그에 이름 내용을 append하고
      //4)수정완료 버튼을 만들고
      //5)client가 내용 수정을 하고
      //6)수정완료 버튼을 누르면
      //7)작성된 값이 등록되기

      //데이터를 먼저 조회해야하니까 get으로 먼저 가져오고
      //일부 데이터 수정하는거니까 이후 patch이용

      function updateVisitor(id) {


        axios({
          method: 'get',
          url: `/visitor/${id}`
        }).then((res) => {

          const {
            username,
            comment
          } = res.data

          const form = document.forms["form-visitor"]
          form.username.value = this.username;
          form.comment.value = this.comment;

          $("input.username").append("username")
          console.log(this.username)

        })
      }
    </script>

  </body>
</html>