//--------------------------------------------------
//기본--------------
//require은 파일(모듈)을 불러오는 함수이다.

//--------------------------------------------------
//case1--------------
//모듈에 만들어진 값이 하나일 경우 이렇게 가져온다.
//모듈로 불러온 그 결과를 add에 넣겠다는 의미.
//add는 변수이름. 원하는 변수이름을 작성해주면 된다.
const add = require("./math.js");
//그리고 처음에 만든 add라는 함수는 매개변수 2개를 받아서 넘겨주는 함수이다.
//그럼 사용할 때 도 매개변수를 두개 넣어주면 된다. 아래처럼.
const sum = add(2, 3);
//그런데 math.js에 add가 아닌 minus등 다른 값들이 있다면 헷갈리지 않게 다른 변수이름을 넣어주면 된다.
const math = require("./math.js");
//이런식으로.

//--------------------------------------------------
//case2--------------
//파일에서 여러개의 식별자를 객체 형태로 내보내는 경우
//파일에서 여러개의 식별자를 객체 형태로 내보내는 경우에는
//모듈을 받아올 때 math로 선언하고 해당 파일을 불러온다.

//그리고 선언한 해당 파일에 있는 add라는 함수를 이용하겠다. 이거는 sum으로 선언.
//결국 sum은 math안에 있는 add라는 함수를 사용하는 것이다.
//위에서 math를 선언했으니까 거기서 add를 빼오게 되는 것.

//쪼개놓은 파일에서 만든 함수와 동일하게 매개변수 값을 두개 넣어준다.
const math = require("./math.js");
const sum = math.add(3, 5);

//console해보면 8 출력.
console.log(sum);

//----------------------------------------------------
//case 3--------------
//파일에서 여러개의 식별자를 객체 형태로 내보내는 경우
//모듈을 받아올 때 다른 방법이다. 결과값은 case2와 동일.

//모듈을 만들고 파일별로 내보낼때는 한번에 내보내야한다.
//근데 만들어진것들이 다 필요하지 않을 수 있다.
//필요한것만 가져올 때 객체구조분해할당을 해서 가져온다.
//아래와 같은 구조가 객체구조분해할당.
//메모리 효율상 이렇게 필요한것만 가져오는걸 추천한다!

//가져오고싶은 것만 가져올 때 key값 그대로 가져오면 된다.

//아래는 내보낸 모듈 중 add만 할당해서 가져오는 코드.
//객체를 분해해서 가져오는거기 때문에 이름은 꼭 동일해야한다!
const { add } = require("./math.js");
//이런식으로 필요한 여러개를 가져올 수도 있다.
// const { add, minus } = require("./math.js");

//여기서 console을 해보면 아래 두가지는 출력되지 않는다.
console.log(sum); //sum을 가져오지 않았기 때문.
console.log(math.PI); //math가 뭔지 선언하지 않았기 때문에 PI도 가져올 수 없다.

//결국 case2 처럼 math를 타고 들어갈 필요가 없어진다.
