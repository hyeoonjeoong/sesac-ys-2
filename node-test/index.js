//case 3
//파일에서 여러개의 식별자를 객체 형태로 내보내는 경우
//근데 모듈을 받아올 때 방법이 달라진다. 얘랑 case2번이랑 결과값은 동일.
//파일별로 내보낼때는 한번에 내보내야한다.
//근데 그걸 다 필요하지않을수도있다. 필요한것만 가져올때 구조분해를 해서 가져온다.
//가져오고싶은것만 가져오면되는데 key값 그대로 가져오면 된다.
//아래같은 구조를 객체구조분해할당 이라고 한다. 이걸통해 가져올수잇따.
//메모리 효율상 이렇게 필요한것만 가져오는걸 추천한다!
//아래는 add만 할당해서 그것만 가져오는것.
const { add } = require("./math.js");
// const { add, minus } = require("./math.js"); //이러케 여러개 가져올수있다.

console.log(sum); //이러케 하면 안뜬다. 안가져왓으니까.
console.log(math.PI); //이것도 안뜬다. math가 먼지 모름.
//case 2 처럼 math를 타고들어갈필요가 없는것.
//----------------------------------------------------
//2번. 값 여러개니까 이러케 다시 작성하고.
//case 2
//파일에서 여러개의 식별자를 객체 형태로 내보내는 경우
//모듈을 받아올 때 객체를 그대로math로 받아옴. math라는 식별자로 받아온것.
// const math = require("./math.js");
// const sum = math.add(3, 5);
// console.log(sum);
// console.log(math.PI);
//2번. 이러케 작성.
//위에서 math를 선언했으니까 거기서 add를 가져오는거구나 라고 해석할줄 알아야
//math안에 있는 add함수를 사용하는거니까 타고들어가야한다.
//----------------------------------------------------
//case 1
//파일에서 한 개의 식별자만 내보내는 경우
// const add = require("./math.js");
//1번 값이 하나면 이러케작성.
//require은 파일(모듈)을 불러오는 함수이다.
//그럼 모듈을 불러온 그 결과가 있다. 그걸 add에 넣겠다. 변수로 생각 add3 등 이러케 해도된다. 변수이름. 원하는대로 작성
//값을 여러개 넘겼기 때문에이러케 하면 단순add의 의미가 아니다.
//그래서 맨위처럼math로 작성해주면 된다.

//1번.원래 매개변수 2개 받아서 넘겨주는 함수였다.(math.js에서 작성한) 그니까 매개변수 두개 넣어주면된다.
// const sum = add(2, 3);
// console.log(sum);
